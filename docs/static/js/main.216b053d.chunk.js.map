{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","placeholder","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAyCeA,EAtCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OACE,oCACE,0BAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMgBO,UAAU,QACtC,yBAAKA,UAAU,oBACb,2BACIC,KAAK,OACLC,MAAOV,EACPW,YAAY,oBACZC,SAtBc,SAACT,GACzBF,EAAcE,EAAEU,OAAOH,c,uBCRdI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACiCF,EADjC,8DAEFG,MAAQD,GAFN,cAEfE,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATjB,kBAadK,GAbc,4CAAH,sDCcLO,EAZK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAIhC,OACE,yBAAKT,UAAU,0CACb,yBAAKsB,IAAKb,EAAKc,IAAKL,IACpB,2BAAIA,KCsBKM,EA1BC,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAEhBhB,mBAAS,CACjCsB,KAAM,GACNY,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAkB1C,OAXAC,qBAAW,WACTtB,EAAQC,GACLsB,MAAK,SAAAC,GACJH,EAAS,CACPd,KAAMiB,EACNL,SAAQ,SAGb,CAAClB,IAGGmB,EDf0BK,CAAcxB,GAAlCY,EAFmB,EAExBN,KAAaY,EAFW,EAEXA,QAErB,OACE,yBAAKzB,UAAU,oBACb,4BAAMO,GAEJkB,GAAW,aAEb,yBAAKzB,UAAU,mBAEXmB,EAAOJ,KAAK,SAACC,GAAD,OACV,kBAAC,EAAD,eACEgB,IAAKhB,EAAIC,IACLD,UEMHiB,EAtBM,WAAO,IAAD,EAEW1C,mBAAS,CAAC,WAFrB,mBAElB2C,EAFkB,KAEN5C,EAFM,KAIzB,OAAO,oCACL,wBAAIU,UAAU,cAAd,sBACA,kBAAC,EAAD,CAAaV,cAAeA,IAI5B,4BAEI4C,EAAWnB,KAAK,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACEyB,IAAMzB,EACNA,SAAUA,U,MCdtB4B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.216b053d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n  \n  const [inputValue, setInputValue] = useState('')\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    if(inputValue.trim().length > 2 ){\n      setCategories( cats => [ inputValue, ...cats ])\n      setInputValue('');\n    } \n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className='form'>\n        <div className='input__container'>\n          <input \n              type='text'\n              value={inputValue}\n              placeholder='Add Your category'\n              onChange={handleInputChange}\n            />\n        </div>        \n      </form>  \n    </>\n  )\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired \n}\n\nexport default AddCategory;\n","export const getGifs = async(category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=5&api_key=T6xORNTNlPCjsuwOP9wq68DiNp0s4I59`;\n  const resp = await fetch ( url );\n  const {data} = await resp.json();\n\n  const gifs = data.map( img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  })\n\n  return gifs;\n}","import React from 'react'\n\nconst GifGridItem = ( {id, title, url} ) => {\n\n  //console.log( id, title, url )\n\n  return (\n    <div className='card animate__animated animate__wobble'>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n\nexport default GifGridItem;","//import React, { useState, useEffect} from 'react'\nimport React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n  const { data:images, loading } = useFetchGifs( category );\n\n  return (\n    <div className='cards__container'>\n      <h3>{ category }</h3>\n\n      { loading && 'Loading...' }\n      \n      <div className='card__container'>\n      {\n          images.map( (img) => (\n            <GifGridItem \n              key={img.id}\n              {...img}\n            />\n          ))\n        }\n      \n      </div>\n        \n    </div>\n  )\n}\n\nexport default GifGrid;\n","\nimport { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n  \n  const [state, setState] = useState({\n    data: [],\n    loading: true, \n  })\n\n  useEffect( () => {\n    getGifs(category)\n      .then(imgs => {\n        setState({\n          data: imgs,\n          loading:false,\n        })\n      })\n  }, [category])\n\n\n  return state; // {data: [], loadign: true}\n\n}","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['Camaro'])\n\n  return <>\n    <h2 className='main__tile'>Looking for a Gif?</h2>\n    <AddCategory setCategories={setCategories}/>\n    \n\n\n    <ul>\n      { \n        categories.map( category => (\n          <GifGrid \n            key={ category }\n            category={category} />\n        ))\n      }\n    </ul>\n  </>\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}